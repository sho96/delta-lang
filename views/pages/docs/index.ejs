<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <%- include('../../templates/meta.ejs')%>
        <%- include('../../templates/links.ejs')%>

            <link rel="stylesheet" href="/css/global.css" />
            <link rel="stylesheet" href="/css/docs.css" />
            <link rel="icon" href="/imgs/logo.svg" />
            <title>DELTA LANG Documentation</title>
</head>

<body>
    <%- include('../../templates/navbar.ejs')%>
        <div class="var-width-container-narrow" id="main-container">
            <div class="title">
                <h1>Delta Documentation</h1>
                <p>Delta is currently in pre-release phase.</p>
            </div>
            <div class="content">
                <section>
                    <header>
                        <h2>Overview</h2>
                    </header>
                    <ul>
                        <li>
                            <h3><a style="color: var(--text-color)" href="#basic-usage">Basic usage</a></h3>
                        </li>
                        <li>
                            <h3><a style="color: var(--text-color)" href="#type-annotations">Type annotations</a></h3>
                        </li>
                        <li>
                            <h3><a style="color: var(--text-color)" href="#supported-features">Supported features</a>
                            </h3>
                        </li>
                        <li>
                            <h3><a style="color: var(--text-color)" href="#additional-features">Additional features</a>
                            </h3>
                        </li>
                    </ul>
                </section>
                <section id="basic-usage">
                    <header>
                        <h2>Basic Usage</h2>
                    </header>
                    <p>Delta can be written in Python, and has <code>.dt</code> extension.</p>
                    <p>Type annotations are required when declaring new identifiers.</p>
                    <p>Example:</p>
                    <ul>

                        <li>valid:</li>
                        <p>
                        <pre class="language-python syntax-highlight">
x: int = 0
print(x)
x = 1
print(x)
</pre>
                        </p>
                        <li>invalid:</li>
                        <p>
                        <pre class="language-python syntax-highlight">
x = 0
print(x)
x = 1
print(x)
</pre>
                        </p>
                    </ul>
                </section>
                <section id="type-annotations">
                    <header>
                        <h2>Type Annotations</h2>
                    </header>
                    <p>Delta requires type annotations when declaring new identifiers</p>
                    <h3>Variables</h3>
                    <p>Basic</p>
                    <pre class="language-python syntax-highlight">
number: int = 0 
number: int #This is also vaild
</pre>
                    <p>Subscripts</p>
                    <pre class="language-python syntax-highlight">
list_var: list[int]
dict_var: dict[str, int] #str as key, int as value
set_var: set[float]
tuple_var: tuple[int, float, str] #datatypes of elements must be specified

mixed_var: list[tuple[str, dict[int, str]]]
</pre>
                    <h3>Functions</h3>
                    <p>Basic</p>
                    <pre class="language-python syntax-highlight">
def print_person(name: str, age: int) -> None:
    print(name, age)
</pre>
                    <p>Keyword arguments</p>
                    <pre class="language-python syntax-highlight">
def calc_vel(target: float, base: float = 0) -> float:
    return target - base
</pre>
                    <h3>Example:</h3>
                    <p>
                    <pre class="language-python syntax-highlight">
def print_person(name: str, age: int) -> None:
    print(f"{name} is {age} years old")

def print_people(people: list[tuple[str, int]]) -> None:
    for person in people:
        print_person(person[0], person[1])


people: list[tuple[str, int]] = []
while True:
    name: str = input("Enter name: ")
    if name == "":
        break
    age: int = int(input("Enter age: "))
    people.append((name, age))

print_people(people)
</pre>
                    </p>
                </section>
                <section id="supported-features">
                    <header>
                        <h2>Supported Features</h2>
                    </header>
                    <p>Delta is currently in pre-release phase, and doesn't support all the features of Python yet.</p>
                    <h3>Supported keywords:</h3>
                    <ul>
                        <li>
                            <code>if</code>
                        </li>
                        <li>
                            <code>elif</code>
                        </li>
                        <li>
                            <code>else</code>
                        </li>
                        <li>
                            <code>for</code>
                        </li>
                        <li>
                            <code>while</code>
                        </li>
                        <li>
                            <code>from ... import ...</code>
                        </li>
                        <li>
                            <code>pass</code>
                        </li>
                        <li>
                            <code>break</code>
                        </li>
                        <li>
                            <code>continue</code>
                        </li>
                        <li>
                            <code>return</code>
                        </li>
                        <li>
                            <code>assert</code>
                        </li>
                        <li>
                            <code>del</code>
                        </li>
                    </ul>
                    <h3>Supported special syntaxes:</h3>
                    <ul>
                        <li>f-strings</li>
                    </ul>
                    <h3>Supported built-in functions:</h3>
                    <ul>
                        <p>built-in:</p>
                        <li>
                            <code>print(object, end="\n") -> None</code>
                        </li>
                        <li>
                            <code>input("prompt") -> str</code>
                        </li>
                        <li>
                            <code>len(iterable) -> int</code>
                        </li>
                        <li>
                            <code>int(str) -> int</code>
                        </li>
                        <li>
                            <code>float(str) -> float</code>
                        </li>
                        <li>
                            <code>str(object) -> str</code>
                        </li>
                        <li>
                            <code>list(str) -> list[str]</code>
                        </li>
                        <li>
                            <code>min(str|list|set) -> element dtype</code>
                        </li>
                        <li>
                            <code>max(str|list|set) -> element dtype</code>
                        </li>
                        <li>
                            <code>sum(str|list|set) -> element dtype</code>
                        </li>
                        <li>
                            <code>sorted(str|list|set) -> list[element dtype]</code>
                        </li>
                        <li>
                            <code>round(float) -> float</code>
                        </li>
                        <li>
                            <code>abs(int|float) -> int|float</code>
                        </li>
                        <p>special functions:</p>
                        <li>
                            <code>cpp(str)</code>
                        </li>
                    </ul>
                </section>
                <section id="additional-features">
                    <header>
                        <h2>Additional Features</h2>
                    </header>
                    <div class="top-bottom-section">
                        <div name="top">
                            <h3><code
                                    class="syntax-highlight language-python">cpp(str)</code></h3>
                        </div>
                        <div name="bottom">
                            <p>injects C++ code into the program</p>
                            <p>Example:</p>
                            <p><code class="syntax-highlight language-python">x: int = cpp("time(nullptr)")</code></p>
                        </div>
                    </div>

                    <div class="top-bottom-section">
                        <div name="top">
                            <h3><code
                                    class="syntax-highlight language-python">from cpp[ext] import ..</code></h3>
                        </div>
                        <div name="bottom">
                            <p>adds #include statement at the top of the compiled C++ file</p>
                            <p>Examples:</p>
                            <p>
                                <code class="syntax-highlight language-python">from cpp import cmath</code> => <code
                                    class="syntax-highlight language-cpp">#include &lt;cmath&gt;</code>
                            </p>
                            <p>
                                <code class="syntax-highlight language-python">from cpph import time</code> => <code
                                    class="syntax-highlight language-cpp">#include &lt;time.h&gt;</code>
                            </p>
                            <p>
                                <code class="syntax-highlight language-python">from cpphpp import opencv</code> =>
                                <code class="syntax-highlight language-cpp">#include &lt;opencv.hpp&gt;</code>
                            </p>
                        </div>
                    </div>


                    <p>Example uses can be found <a target="_blank"
                            href="https://github.com/sho96/Delta/tree/master/dtfiles">here</a></p>
                </section>
            </div>
        </div>
        <%- include('../../templates/footer.ejs')%>
</body>
<script src="/js/syntax-highlight.js"></script>

</html>